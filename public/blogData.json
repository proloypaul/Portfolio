[
    {
        "id": 1,
        "title": "Dualism or Binary Logic",
        "articale": "Dualism or Binary Logic is a concept in modern computers that originated in 1702 with the ideas of Gottfried Leibniz. More than a century later, George Boole published his Boolean algebra, which greatly contributed to the understanding of computational methods. The term 'binary' refers to the use of two symbols or digits, 0 and 1, in this number system. For example, (1010) is a binary number. The binary number system is the simplest numerical system, using only two digits, 0 and 1, hence its base is 2. In binary, 0 and 1 are called bits, and a group of eight bits forms a byte, a fundamental unit in computing and telecommunications, storing information in digital devices.All electronic devices use only two states, indicating the presence of electricity as ON, HIGH, TRUE, or YES, representing logic level 1, and the absence of electricity as OFF, LOW, FALSE, or NO, representing logic level 0. Logic levels 0 and 1 correspond directly to binary number system. Therefore, computers and electronic devices predominantly use the binary number system.Now, let's delve a bit into the history of numerical systems, which laid the foundation for the binary number system. From early civilizations, people felt the need to quantify and calculate. Various tools like fingers, pebbles, sticks, knots, marks on walls, and even scratches on bones were initially used for counting. With the evolution of civilization, different symbols and signs started being used for counting. The first written numerical systems, Hieroglyphics, date back to around 3400 BCE, and subsequently, mean, Roman, and decimal numerical systems were introduced. A number is an element used for counting, measuring, and quantifying, and every digit is the smallest symbol in number creation. All digits make up numbers, but not all numbers consist only of digits. For instance, 213 is a three-digit number composed of digits 2, 1, and 3.There are two types of numerical systems: Non-positional (aspatial) and positional. In non-positional systems, the value of a number does not depend on the position of digits in it. On the other hand, positional systems, such as the decimal system, determine the value of a number based on the position of its digits. The positional system divides into four categories: binary, octal, decimal, and hexadecimal.",
        "img":"https://i.ibb.co/Q9HHvqT/png-transparent-numeral-system-abundant-number-counting-summation-sound-wave-miscellaneous-text-meas.png",
        "topic": ["Binary", "Number System", "Computer Language"],
        "visit": "https://medium.com/@proloyp23/dualism-or-binary-logic-478aca82aa2d"
    },
    {
        "id": 2,
        "title": "Mechanism of ReactDom",
        "articale": "In this paragraph, we will try to understand ReactDom as much as possible and how React efficiently displays output for us when we write a program by creating a React component or combining HTML, CSS, and JS. So, the functionalities we don't see with the naked eye. Let's first understand what ReactDom is. To learn React, we need a good understanding of HTML, CSS, and JS. Through these, we can create a Web Application. A Web Application may have more than one page. Each page of a Web Application is created by HTML, styled by CSS, and contains logic using JS, allowing us to build a beautiful and functional website. Without React, to create a website, we have to write HTML, CSS, and JS separately. To apply JavaScript to HTML tags, we need to call an object called Document, within which all HTML tags are located. Various properties of the Document Object can be called to perform JavaScript logic and actions, such as document.appendChild(), document.createElement(), and event handlers. On the other hand, React makes this process much easier for us. We can write HTML, CSS, and JS in one file called JSX. Behind the scenes, React takes control of these files very neatly. Here, we will learn how React manages the Document Object Model (DOM) behind the scenes. React manages this DOM by creating a Real DOM and two Virtual DOMs. By Real DOM, we mean what you see on your browser screen. It represents what you see after creating React components. In this case, React makes our work much easier. We can write HTML, CSS, and JS in a single file called JSX. Behind the scenes, React manages these files very neatly. Here, we will learn how React manages the Document Object Model (DOM) behind the scenes. React manages this DOM by creating a Real DOM and two Virtual DOMs. The Real DOM represents what you see on your browser screen. After creating React components, it shows what you will see next. Then, what is Virtual DOM, and what is its role? Virtual DOM is a copy of the Real DOM, another DOM. Remember that I mentioned two Virtual DOMs. One is a copy of the Real DOM, and the other is a copy that React creates when you make changes or write something within a React component. This new data will be compared with the previous Virtual DOM, and only the changes will be highlighted. React will then update the Real DOM with these changes. DOM functions use an algorithm called 'differ' to carry out these tasks.",
        "img":"https://i.ibb.co/jr3ycyG/images.png",
        "topic": ["React", "Real DOM", "Virtual DOM"],
        "visit": "https://medium.com/@proloyp23/mechanism-of-reactdom-413f02843987"
    }
]